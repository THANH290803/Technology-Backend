package com.store.technology.Repository;

import com.store.technology.Entity.Specification;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;

import java.util.List;

public interface SpecificationRepository extends JpaRepository<Specification, Long> {
    // ‚úÖ L·∫•y t·∫•t c·∫£ (k·ªÉ c·∫£ ƒë√£ xo√°)
    @Query("SELECT specification FROM Specification specification")
    List<Specification> findAllIncludingDeleted();

    // ‚úÖ L·∫•y t·∫•t c·∫£ ch∆∞a xo√°
    @Query("SELECT specification FROM Specification specification WHERE specification.deletedAt IS NULL")
    List<Specification> findAllNotDeleted();

    // ‚úÖ L·∫•y 1 (k·ªÉ c·∫£ ƒë√£ xo√°)
    @Query("SELECT specification FROM Specification specification WHERE specification.id = :id")
    Specification findAnyById(Long id);

    // ‚úÖ L·∫•y 1 (ch∆∞a xo√°)
    @Query("SELECT specification FROM Specification specification WHERE specification.id = :id AND specification.deletedAt IS NULL")
    Specification findNotDeletedById(Long id);

    // üü¢ L·∫•y t·∫•t c·∫£ Specification theo configurationId (kh√¥ng b·ªã x√≥a)
    @Query("SELECT s FROM Specification s WHERE s.configuration.id = :configurationId AND s.deletedAt IS NULL")
    List<Specification> findByConfigurationId(Long configurationId);

    // üü£ (Tu·ª≥ ch·ªçn) Bao g·ªìm c·∫£ nh·ªØng c√°i ƒë√£ b·ªã x√≥a m·ªÅm
    @Query("SELECT s FROM Specification s WHERE s.configuration.id = :configurationId")
    List<Specification> findAllByConfigurationIdIncludingDeleted(Long configurationId);
}
